import { selectCart } from '../../../../../redux/slices/selectors'
import { clearItems } from '../../../../../redux/slices/slice'
import { useAppSelector } from '../../../../../hooks/hooks'
import { FC, useEffect, useRef, useState } from 'react'
import basketClearImg from './img/basketImg.webp'
import { BasketItem } from './BasketItem'
import styles from './styles.module.scss'
import { useDispatch } from 'react-redux'
import { Link } from 'react-router-dom'

export const Middle: FC = (): JSX.Element => {
  const [accessClearAllItem, setAccessClearAllItem] = useState(false)
  const { items, totalPrice } = useAppSelector(selectCart)
  const dispatch = useDispatch()
  const isMounted = useRef(false)
  const clearAllProducts = (): void => {
    dispatch(clearItems())
  }
  const totalCount = items.reduce(
    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands
    (sum: number, item: any) => sum + item.count,
    0
  )

  useEffect(() => {
    window.scrollTo(0, 0)
    if (isMounted.current) {
      const json = JSON.stringify(items)
      localStorage.setItem('cart', json)
    }
    isMounted.current = true
  }, [items])

  return (
    <>
      {totalPrice !== 0 ? (
        <div className={styles.middleContainer}>
          <div className={styles.header}>–ö–æ—Ä–∑–∏–Ω–∞</div>
          {items.map((basketItem) => (
            <BasketItem key={basketItem.id} {...basketItem} />
          ))}
          <div className={styles.totalContainer}>
            <div className={styles.totalHeader}>–ò—Ç–æ–≥–æ</div>
            <div className={styles.totalProductContainer}>
              <div>–í—Å–µ–≥–æ –ø–æ–∑–∏—Ü–∏–π : {totalCount}</div>
              <div>{totalPrice} RUB</div>
            </div>
            <div className={styles.totalDiscountContainer}>
              <div>–°–∫–∏–¥–∫–∞</div>
              <div>0 RUB</div>
            </div>
            <div className={styles.totalDeliveryContainer}>
              <div>–î–æ—Å—Ç–∞–≤–∫–∞</div>
              <div>–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</div>
            </div>
          </div>
          {accessClearAllItem && (
            <div className={styles.accessClearAllItem}>
              –í—ã –¥–µ–π—Ç—Å–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∫–æ—Ä–∑–∏–Ω—É?
              <div>–í—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.</div>
              <div className={styles.accessBtnContainer}>
                <div onClick={() => clearAllProducts()}>–£–¥–∞–ª–∏—Ç—å</div>
                <div onClick={() => setAccessClearAllItem(false)}>–û—Ç–º–µ–Ω–∞</div>
              </div>
            </div>
          )}
          <div
            onClick={() => setAccessClearAllItem(true)}
            className={styles.clearBasket}
          >
            –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∫–æ—Ä–∑–∏–Ω—É
          </div>
          <Link to={'/delivery'}>
            <div className={styles.delivery}>–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑</div>
          </Link>
        </div>
      ) : (
        <div className={styles.basketClearContainer}>
          <div className={styles.basketClearHeader}>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞—è üòï</div>
          <div className={styles.basketClearText}>
            –í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ, –≤—ã –µ—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–∫–∞–∑—ã–≤–∞–ª–∏.
            <div>
              –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.
            </div>
          </div>
          <div className={styles.basketClearImg}>
            <img src={basketClearImg} alt="basketClearImg" />
          </div>
          <div className={styles.basketClearNavigateContainer}>
            <Link to={'/main'}>
              <div className={styles.basketClearNavigate}>–ó–∞ –ø–æ–∫—É–ø–∫–∞–º–∏</div>
            </Link>
          </div>
        </div>
      )}
    </>
  )
}
